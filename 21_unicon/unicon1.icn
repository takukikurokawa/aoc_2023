# AoC Day21 Part1
procedure main()
    s := []
    while l := read(&input) do {
        put(s, l)
    }
    n := *s
    m := *s[1]
    d := []
    every i := 1 to n do {
        r := []
        every j := 1 to m do {
            put(r, -1)
        }
        put(d, r)
    }
    sx := -1
    sy := -1
    every i := 1 to n do {
        every j := 1 to m do {
            if s[i][j] === "S" then {
                sx := i
                sy := j
                d[sx][sy] := 0
            }
        }
    }
    dx := [-1, 0, 1, 0]
    dy := [0, 1, 0, -1]
    queue := []
    put(queue, [sx, sy])
    while *queue > 0 do {
        x := queue[1][1]
        y := queue[1][2]
        pop(queue)
        # write(x, " ", y, " ", d[x][y])
        every dir := 1 to 4 do {
            nx := x + dx[dir]
            ny := y + dy[dir]
            if 1 <= nx & nx <= n & 1 <= ny & ny <= m & s[nx][ny] ~== "#" & d[nx][ny] == -1 then {
                d[nx][ny] := d[x][y] + 1
                put(queue, [nx, ny])
            }
        }
        # every i := 1 to *queue do {
        #     write(queue[i][1], " ", queue[i][2])
        # }
    }
    ans := 0
    every i := 1 to n do {
        every j := 1 to m do {
            if d[i][j] <= 64 & d[i][j] % 2 == 0 then {
                ans := ans + 1
            }
        }
    }
    write(ans)
end
